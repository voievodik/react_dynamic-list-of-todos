{"version":3,"sources":["types/Select.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Select","TodoItem","todo","selectedTodo","onSelectTodo","className","classnames","id","completed","title","type","onClick","TodoList","todos","map","TodoFilter","query","onQueryChange","selectedFilter","onSelectFilter","value","onChange","event","target","Object","entries","key","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","href","name","App","setTodos","setQuery","setSelectedFilter","setSelectedTodo","todosFrommServer","filteredTodos","todosCopy","filter","toLowerCase","includes","getFilteredTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2922a493.chunk.js","sourcesContent":["export enum Select {\n  all = 'All',\n  active = 'Active',\n  completed = 'Completed',\n}\n","import classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  selectedTodo: Todo | null;\n  onSelectTodo: (todo: Todo) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  onSelectTodo,\n}) => {\n  return (\n    <tr\n      key={todo.id}\n      data-cy=\"todo\"\n      className={classnames({\n        'has-background-info-light': selectedTodo === todo,\n      })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={todo.completed\n          ? 'has-text-success'\n          : 'has-text-danger'}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onSelectTodo(todo)}\n        >\n          <span className=\"icon\">\n            {selectedTodo === todo\n              ? <i className=\"far fa-eye-slash\" />\n              : <i className=\"far fa-eye\" />}\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelectTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          selectedTodo={selectedTodo}\n          onSelectTodo={onSelectTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { Select } from '../../types/Select';\n\ntype Props = {\n  query: string;\n  onQueryChange: (value: string) => void;\n  selectedFilter: string;\n  onSelectFilter: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  selectedFilter,\n  onSelectFilter,\n}) => {\n  const resetFilters = () => {\n    onQueryChange('');\n    onSelectFilter('all');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedFilter}\n            onChange={(event) => onSelectFilter(event?.target.value)}\n          >\n            {Object.entries(Select).map(([key, value]) => (\n              <option value={key} key={key}>\n                {value}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Clear Search\"\n              onClick={resetFilters}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo | null;\n  onSelectTodo: (value: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo, onSelectTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo?.userId) {\n      getUser(todo?.userId).then(setUser);\n    }\n  }, [todo?.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Modal Close\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nconst getFilteredTodos = (\n  todos: Todo[],\n  query: string,\n  selectedFilter: string,\n) => {\n  let todosCopy = [...todos];\n\n  if (query) {\n    todosCopy = todos.filter(({ title }) => {\n      return title.toLowerCase().includes(query.toLowerCase());\n    });\n  }\n\n  if (selectedFilter) {\n    switch (selectedFilter) {\n      case 'active':\n        return todosCopy.filter((todo) => todo.completed === false);\n      case 'completed':\n        return todosCopy.filter((todo) => todo.completed === true);\n      default:\n        return todosCopy;\n    }\n  }\n\n  return todosCopy;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then((todosFrommServer) => {\n      setTodos(todosFrommServer);\n    });\n  }, []);\n\n  const filteredTodos = getFilteredTodos(todos, query, selectedFilter);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                selectedFilter={selectedFilter}\n                onSelectFilter={setSelectedFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length ? (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  onSelectTodo={setSelectedTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onSelectTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}